version: "3.9"

networks:
  main-net:
    external: true
    name: docker_default
  monitor-net:
    driver: bridge

volumes:
  prometheus_data:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/data/prom/prometheus_data"
  grafana_data:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/data/prom/grafana_data"

services:
  prometheus:
    image: prom/prometheus:latest
    # container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/data/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/data/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=240h"
      - "--web.enable-lifecycle"
    ports:
      - "9090:9090"
    user: root
    networks:
      - main-net
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    restart: always

  grafana:
    image: grafana/grafana-enterprise:8.2.0
    # container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      # - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      # - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-you_admin_password}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_AUTH_PROXY_ENABLED=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_SERVER_DOMAIN=one.xjjj.co
      - GF_SERVER_ROOT_URL=https://one.xjjj.co/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    depends_on:
      - prometheus
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    restart: always

  nodeexporter:
    image: prom/node-exporter:v1.1.2
    # container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)"
    expose:
      - 9100
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    restart: always

  cadvisor:
    image: stilleshan/cadvisor:latest
    # container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    expose:
      - 8080
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    restart: always

  nginx_exporter:
    image: nginx/nginx-prometheus-exporter:0.11.0
    container_name: nginx_exporter
    hostname: nginx_exporter
    command:
      - '-nginx.scrape-uri=http://nginx/server-status'
    restart: always
    expose:
      - 9113
    networks:
      - monitor-net
      - main-net
